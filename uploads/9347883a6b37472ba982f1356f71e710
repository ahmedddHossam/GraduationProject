import React, { useState } from "react";
import "../uploadFile/AddGradFile.css";
import axios from "axios";
import Cookies from "js-cookie";
import { useFormik } from "formik";
import * as Yup from "yup";
import { Spinner } from "react-bootstrap";
import Swal from "sweetalert2";

const AddGradFile = () => {
  const [isLoading, setIsLoading] = useState(false);

  const formik = useFormik({
    initialValues: {
      file: null,
      bylaw: "",
      fileType: "",
    },
    validationSchema: Yup.object({
      file: Yup.mixed().required("A file is required"),
      bylaw: Yup.string().required("Bylaw is required"),
      fileType: Yup.string().required("File type is required"),
    }),
    onSubmit: async (values, { setSubmitting, resetForm }) => {
      setIsLoading(true);
      try {
        const token = Cookies.get("jwtToken");
        const data = new FormData();
        data.append("file", values.file);
        data.append("bylaw", values.bylaw);
        data.append("fileType", values.fileType);

        const response = await axios.post(
          "http://localhost:5000/api/graduates/addGraduatesFromFile",
          data,
          {
            headers: {
              Authorization: `Bearer ${token}`,
              "Content-Type": "multipart/form-data",
            },
          }
        );

        if (response.status === 200) {
          console.log(response);
          resetForm();
        }
      } catch (error) {
        Swal.fire({
          position: "top-end",
          icon: "error",
          title: error.message,
          showConfirmButton: false,
          timer: 500,
        });
      } finally {
        setSubmitting(false);
        setIsLoading(false);
      }
    },
  });

  const handleChange = (event) => {
    const file = event.currentTarget.files[0];
    formik.setFieldValue("file", file);
  };

  return (
    <div className="d-flex flex-column align-items-center mt-5 p-2">
      <h4 className="mb-4 text-center mt-2">Add New Graduates </h4>
      <form onSubmit={formik.handleSubmit}>
        <div className="d-flex flex-row">
          <div className="me-2 mt-3">
            <label htmlFor="file">Upload File</label>
            <input
              className="form-control"
              name="file"
              type="file"
              id="file"
              onChange={handleChange}
            />
            {formik.touched.file && formik.errors.file ? (
              <div className="text-danger">{formik.errors.file}</div>
            ) : null}
          </div>
          <div className=" mx-5 mb-2">
            <label htmlFor="bylaw" className="mt-3">
              Bylaw
            </label>
            <select
              className="form-control"
              id="bylaw"
              name="bylaw"
              value={formik.values.bylaw}
              onChange={formik.handleChange}
              onBlur={formik.handleBlur}
            >
              <option value="" label="Select bylaw" />
              <option value="old" label="Old Bylaw" />
              <option value="new" label="New Bylaw" />
            </select>
            {formik.touched.bylaw && formik.errors.bylaw ? (
              <div className="text-danger">{formik.errors.bylaw}</div>
            ) : null}
          </div>
          <div className=" mx-5 mb-2">
            <label htmlFor="fileType" className="mt-3">
              File Type
            </label>
            <select
              className="form-control"
              id="fileType"
              name="fileType"
              value={formik.values.fileType}
              onChange={formik.handleChange}
              onBlur={formik.handleBlur}
            >
              <option value="" label="Select file type" />
              <option value="Graduate information" label="Graduate Information" />
              <option value="Graduate Grade" label="Graduate Grade" />
            </select>
            {formik.touched.fileType && formik.errors.fileType ? (
              <div className="text-danger">{formik.errors.fileType}</div>
            ) : null}
          </div>
        </div>
        <div className="mt-3 d-flex justify-content-center">
          <button
            type="submit"
            className="btn btn-dark btn-md "
            disabled={
              formik.isSubmitting ||
              !formik.values.file ||
              !formik.values.bylaw ||
              !formik.values.fileType
            }
          >
            {isLoading ? (
              <Spinner
                as="span"
                animation="border"
                size="sm"
                role="status"
                aria-hidden="true"
              />
            ) : (
              "Upload"
            )}
          </button>
        </div>
      </form>
    </div>
  );
};

export default AddGradFile;
